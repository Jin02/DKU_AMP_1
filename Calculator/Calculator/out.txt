--------- Init ---------
all clear register
all clear memory
sp : 0x8000
ra : 0xffffffff
Load .bin file : /Users/jin/Project/MipsEmulator/Calculator/Calculator/input2.bin
This system is based little endian. so, I will convert this data to big endian format
--------- Done ---------


--------- System Start ---------
-----------------------------------------------
Cycle Num	| 0
Fetch State	| instruction Value is 0x0x27bdffd8
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 1
Decode State	| instruction Value is 0x0x27bdffd8
I Type		| opcode 0x9 / signExtImm 0xffffffd8 / zeroExtImm 0xffd8 / branchAddr 0xffffff60
I Type		| rsData = 0x8000 = register[rs=0x1d]  / rt = 0x1d / immediate = 0xffffffd8
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0xafbf0024
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 2
Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7fd8 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0xafbf0024
I Type		| opcode 0x2b / signExtImm 0x24 / zeroExtImm 0x24 / branchAddr 0x90
I Type		| rsData = 0x8000 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x24
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0xafbe0020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 3
Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7ffc / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0xafbe0020
I Type		| opcode 0x2b / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x8000 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x20
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x3a0f021
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 4
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7fd8 / ExecutionResult 

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7fd8) + 0x24) = 0x7ffc] = R[31](0xffffffff)

Execution State	| instruction is StoreWord
ExecutionResult = 0x7ff8 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x3a0f021
R Type		| rd 0x1e / rs 0x1d / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7fd8 = register[rs=0x1d]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0xafc00018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 5
WriteBack State	| instruction is StoreWord

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7fd8) + 0x20) = 0x7ff8] = R[30](0x0)

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7fd8 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0xafc00018
I Type		| opcode 0x2b / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x0 = register[rs=0x1e]  / rt = 0x0 / immediate = 0x18
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x24040005
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 6
WriteBack State	| instruction is StoreWord

Memory State	| instruction is AddUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7ff0 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x24040005
I Type		| opcode 0x9 / signExtImm 0x5 / zeroExtImm 0x5 / branchAddr 0x14
I Type		| rsData = 0x0 = register[rs=0x0]  / rt = 0x4 / immediate = 0x5
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0xc000010
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 7
WriteBack State	| instruction is AddUnsigned
R[rd=0x1e] = 0x7fd8

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[30](0x7fd8) + 0x18) = 0x7ff0] = R[0](0x0)

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x5 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0xc000010
J Type		| opcode 0x3 / address 0x40
J Type		| address = 0x40
Instruction	| JumpAndLink

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 8
WriteBack State	| instruction is StoreWord

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is JumpAndLink
R[31] = PC + 8; PC = JumpAddr
R[31] = 0x20; PC = 0x40

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 9
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x4] = 0x5 / ExecutionResult 

Memory State	| instruction is JumpAndLink

Fetch State	| instruction Value is 0x0x27bdffe0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 10
WriteBack State	| instruction is JumpAndLink

Decode State	| instruction Value is 0x0x27bdffe0
I Type		| opcode 0x9 / signExtImm 0xffffffe0 / zeroExtImm 0xffe0 / branchAddr 0xffffff80
I Type		| rsData = 0x7fd8 = register[rs=0x1d]  / rt = 0x1d / immediate = 0xffffffe0
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0xafbf001c
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 11
Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7fb8 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0xafbf001c
I Type		| opcode 0x2b / signExtImm 0x1c / zeroExtImm 0x1c / branchAddr 0x70
I Type		| rsData = 0x7fd8 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x1c
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0xafbe0018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 12
Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7fd4 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0xafbe0018
I Type		| opcode 0x2b / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7fd8 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x18
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x3a0f021
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 13
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7fb8 / ExecutionResult 

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7fb8) + 0x1c) = 0x7fd4] = R[31](0x20)

Execution State	| instruction is StoreWord
ExecutionResult = 0x7fd0 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x3a0f021
R Type		| rd 0x1e / rs 0x1d / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7fb8 = register[rs=0x1d]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0xafc40020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 14
WriteBack State	| instruction is StoreWord

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7fb8) + 0x18) = 0x7fd0] = R[30](0x7fd8)

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7fb8 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0xafc40020
I Type		| opcode 0x2b / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7fd8 = register[rs=0x1e]  / rt = 0x4 / immediate = 0x20
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x8fc30020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 15
WriteBack State	| instruction is StoreWord

Memory State	| instruction is AddUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7fd8 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fc30020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7fd8 = register[rs=0x1e]  / rt = 0x3 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x24020001
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 16
WriteBack State	| instruction is AddUnsigned
R[rd=0x1e] = 0x7fb8

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[30](0x7fb8) + 0x20) = 0x7fd8] = R[4](0x5)

Execution State	| instruction is LoadWord
ExecutionResult = 0x7fd8 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x24020001
I Type		| opcode 0x9 / signExtImm 0x1 / zeroExtImm 0x1 / branchAddr 0x4
I Type		| rsData = 0x0 = register[rs=0x0]  / rt = 0x2 / immediate = 0x1
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x14620004
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 17
WriteBack State	| instruction is StoreWord

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x1 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x14620004
I Type		| opcode 0x5 / signExtImm 0x4 / zeroExtImm 0x4 / branchAddr 0x10
I Type		| rsData = 0x0 = register[rs=0x3]  / rt = 0x2 / immediate = 0x10
Instruction	| BranchOnNotEqual

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 18
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[3] = M[R[30](0x7fb8) + 0x20] = 0x7fd8

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is BranchOnNotEqual
if(R[rs] != R[rt])	PC = PC + 4 + BranchAddr
if(R[3](0x5) != R[2](0x1))	PC = {0x5c + 4 + 0x10}(0x70)

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 19
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x2] = 0x1 / ExecutionResult 

Memory State	| instruction is BranchOnNotEqual

Fetch State	| instruction Value is 0x0x8fc20020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 20
WriteBack State	| instruction is BranchOnNotEqual

Decode State	| instruction Value is 0x0x8fc20020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7fb8 = register[rs=0x1e]  / rt = 0x2 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x2442ffff
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 21
Execution State	| instruction is LoadWord
ExecutionResult = 0x7fd8 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x2442ffff
I Type		| opcode 0x9 / signExtImm 0xffffffff / zeroExtImm 0xffff / branchAddr 0xfffffffc
I Type		| rsData = 0x1 = register[rs=0x2]  / rt = 0x2 / immediate = 0xffffffff
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x402021
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 22
Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x4 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x402021
R Type		| rd 0x4 / rs 0x2 / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x1 = register[rs=0x2]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0xc000010
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 23
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[2] = M[R[30](0x7fb8) + 0x20] = 0x7fd8

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x4 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0xc000010
J Type		| opcode 0x3 / address 0x40
J Type		| address = 0x40
Instruction	| JumpAndLink

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 24
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x2] = 0x4 / ExecutionResult 

Memory State	| instruction is AddUnsigned

Execution State	| instruction is JumpAndLink
R[31] = PC + 8; PC = JumpAddr
R[31] = 0x84; PC = 0x40

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 25
WriteBack State	| instruction is AddUnsigned
R[rd=0x4] = 0x4

Memory State	| instruction is JumpAndLink

Fetch State	| instruction Value is 0x0x27bdffe0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 26
WriteBack State	| instruction is JumpAndLink

Decode State	| instruction Value is 0x0x27bdffe0
I Type		| opcode 0x9 / signExtImm 0xffffffe0 / zeroExtImm 0xffe0 / branchAddr 0xffffff80
I Type		| rsData = 0x7fb8 = register[rs=0x1d]  / rt = 0x1d / immediate = 0xffffffe0
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0xafbf001c
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 27
Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7f98 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0xafbf001c
I Type		| opcode 0x2b / signExtImm 0x1c / zeroExtImm 0x1c / branchAddr 0x70
I Type		| rsData = 0x7fb8 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x1c
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0xafbe0018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 28
Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7fb4 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0xafbe0018
I Type		| opcode 0x2b / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7fb8 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x18
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x3a0f021
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 29
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7f98 / ExecutionResult 

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7f98) + 0x1c) = 0x7fb4] = R[31](0x84)

Execution State	| instruction is StoreWord
ExecutionResult = 0x7fb0 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x3a0f021
R Type		| rd 0x1e / rs 0x1d / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7f98 = register[rs=0x1d]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0xafc40020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 30
WriteBack State	| instruction is StoreWord

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7f98) + 0x18) = 0x7fb0] = R[30](0x7fb8)

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7f98 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0xafc40020
I Type		| opcode 0x2b / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7fb8 = register[rs=0x1e]  / rt = 0x4 / immediate = 0x20
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x8fc30020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 31
WriteBack State	| instruction is StoreWord

Memory State	| instruction is AddUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7fb8 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fc30020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7fb8 = register[rs=0x1e]  / rt = 0x3 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x24020001
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 32
WriteBack State	| instruction is AddUnsigned
R[rd=0x1e] = 0x7f98

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[30](0x7f98) + 0x20) = 0x7fb8] = R[4](0x4)

Execution State	| instruction is LoadWord
ExecutionResult = 0x7fb8 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x24020001
I Type		| opcode 0x9 / signExtImm 0x1 / zeroExtImm 0x1 / branchAddr 0x4
I Type		| rsData = 0x0 = register[rs=0x0]  / rt = 0x2 / immediate = 0x1
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x14620004
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 33
WriteBack State	| instruction is StoreWord

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x1 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x14620004
I Type		| opcode 0x5 / signExtImm 0x4 / zeroExtImm 0x4 / branchAddr 0x10
I Type		| rsData = 0x5 = register[rs=0x3]  / rt = 0x2 / immediate = 0x10
Instruction	| BranchOnNotEqual

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 34
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[3] = M[R[30](0x7f98) + 0x20] = 0x7fb8

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is BranchOnNotEqual
if(R[rs] != R[rt])	PC = PC + 4 + BranchAddr
if(R[3](0x4) != R[2](0x1))	PC = {0x5c + 4 + 0x10}(0x70)

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 35
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x2] = 0x1 / ExecutionResult 

Memory State	| instruction is BranchOnNotEqual

Fetch State	| instruction Value is 0x0x8fc20020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 36
WriteBack State	| instruction is BranchOnNotEqual

Decode State	| instruction Value is 0x0x8fc20020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f98 = register[rs=0x1e]  / rt = 0x2 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x2442ffff
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 37
Execution State	| instruction is LoadWord
ExecutionResult = 0x7fb8 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x2442ffff
I Type		| opcode 0x9 / signExtImm 0xffffffff / zeroExtImm 0xffff / branchAddr 0xfffffffc
I Type		| rsData = 0x1 = register[rs=0x2]  / rt = 0x2 / immediate = 0xffffffff
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x402021
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 38
Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x3 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x402021
R Type		| rd 0x4 / rs 0x2 / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x1 = register[rs=0x2]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0xc000010
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 39
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[2] = M[R[30](0x7f98) + 0x20] = 0x7fb8

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x3 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0xc000010
J Type		| opcode 0x3 / address 0x40
J Type		| address = 0x40
Instruction	| JumpAndLink

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 40
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x2] = 0x3 / ExecutionResult 

Memory State	| instruction is AddUnsigned

Execution State	| instruction is JumpAndLink
R[31] = PC + 8; PC = JumpAddr
R[31] = 0x84; PC = 0x40

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 41
WriteBack State	| instruction is AddUnsigned
R[rd=0x4] = 0x3

Memory State	| instruction is JumpAndLink

Fetch State	| instruction Value is 0x0x27bdffe0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 42
WriteBack State	| instruction is JumpAndLink

Decode State	| instruction Value is 0x0x27bdffe0
I Type		| opcode 0x9 / signExtImm 0xffffffe0 / zeroExtImm 0xffe0 / branchAddr 0xffffff80
I Type		| rsData = 0x7f98 = register[rs=0x1d]  / rt = 0x1d / immediate = 0xffffffe0
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0xafbf001c
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 43
Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7f78 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0xafbf001c
I Type		| opcode 0x2b / signExtImm 0x1c / zeroExtImm 0x1c / branchAddr 0x70
I Type		| rsData = 0x7f98 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x1c
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0xafbe0018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 44
Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7f94 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0xafbe0018
I Type		| opcode 0x2b / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7f98 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x18
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x3a0f021
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 45
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7f78 / ExecutionResult 

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7f78) + 0x1c) = 0x7f94] = R[31](0x84)

Execution State	| instruction is StoreWord
ExecutionResult = 0x7f90 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x3a0f021
R Type		| rd 0x1e / rs 0x1d / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7f78 = register[rs=0x1d]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0xafc40020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 46
WriteBack State	| instruction is StoreWord

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7f78) + 0x18) = 0x7f90] = R[30](0x7f98)

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7f78 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0xafc40020
I Type		| opcode 0x2b / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f98 = register[rs=0x1e]  / rt = 0x4 / immediate = 0x20
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x8fc30020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 47
WriteBack State	| instruction is StoreWord

Memory State	| instruction is AddUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7f98 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fc30020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f98 = register[rs=0x1e]  / rt = 0x3 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x24020001
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 48
WriteBack State	| instruction is AddUnsigned
R[rd=0x1e] = 0x7f78

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[30](0x7f78) + 0x20) = 0x7f98] = R[4](0x3)

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f98 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x24020001
I Type		| opcode 0x9 / signExtImm 0x1 / zeroExtImm 0x1 / branchAddr 0x4
I Type		| rsData = 0x0 = register[rs=0x0]  / rt = 0x2 / immediate = 0x1
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x14620004
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 49
WriteBack State	| instruction is StoreWord

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x1 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x14620004
I Type		| opcode 0x5 / signExtImm 0x4 / zeroExtImm 0x4 / branchAddr 0x10
I Type		| rsData = 0x4 = register[rs=0x3]  / rt = 0x2 / immediate = 0x10
Instruction	| BranchOnNotEqual

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 50
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[3] = M[R[30](0x7f78) + 0x20] = 0x7f98

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is BranchOnNotEqual
if(R[rs] != R[rt])	PC = PC + 4 + BranchAddr
if(R[3](0x3) != R[2](0x1))	PC = {0x5c + 4 + 0x10}(0x70)

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 51
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x2] = 0x1 / ExecutionResult 

Memory State	| instruction is BranchOnNotEqual

Fetch State	| instruction Value is 0x0x8fc20020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 52
WriteBack State	| instruction is BranchOnNotEqual

Decode State	| instruction Value is 0x0x8fc20020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f78 = register[rs=0x1e]  / rt = 0x2 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x2442ffff
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 53
Execution State	| instruction is LoadWord
ExecutionResult = 0x7f98 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x2442ffff
I Type		| opcode 0x9 / signExtImm 0xffffffff / zeroExtImm 0xffff / branchAddr 0xfffffffc
I Type		| rsData = 0x1 = register[rs=0x2]  / rt = 0x2 / immediate = 0xffffffff
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x402021
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 54
Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x2 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x402021
R Type		| rd 0x4 / rs 0x2 / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x1 = register[rs=0x2]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0xc000010
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 55
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[2] = M[R[30](0x7f78) + 0x20] = 0x7f98

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x2 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0xc000010
J Type		| opcode 0x3 / address 0x40
J Type		| address = 0x40
Instruction	| JumpAndLink

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 56
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x2] = 0x2 / ExecutionResult 

Memory State	| instruction is AddUnsigned

Execution State	| instruction is JumpAndLink
R[31] = PC + 8; PC = JumpAddr
R[31] = 0x84; PC = 0x40

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 57
WriteBack State	| instruction is AddUnsigned
R[rd=0x4] = 0x2

Memory State	| instruction is JumpAndLink

Fetch State	| instruction Value is 0x0x27bdffe0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 58
WriteBack State	| instruction is JumpAndLink

Decode State	| instruction Value is 0x0x27bdffe0
I Type		| opcode 0x9 / signExtImm 0xffffffe0 / zeroExtImm 0xffe0 / branchAddr 0xffffff80
I Type		| rsData = 0x7f78 = register[rs=0x1d]  / rt = 0x1d / immediate = 0xffffffe0
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0xafbf001c
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 59
Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7f58 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0xafbf001c
I Type		| opcode 0x2b / signExtImm 0x1c / zeroExtImm 0x1c / branchAddr 0x70
I Type		| rsData = 0x7f78 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x1c
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0xafbe0018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 60
Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7f74 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0xafbe0018
I Type		| opcode 0x2b / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7f78 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x18
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x3a0f021
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 61
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7f58 / ExecutionResult 

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7f58) + 0x1c) = 0x7f74] = R[31](0x84)

Execution State	| instruction is StoreWord
ExecutionResult = 0x7f70 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x3a0f021
R Type		| rd 0x1e / rs 0x1d / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7f58 = register[rs=0x1d]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0xafc40020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 62
WriteBack State	| instruction is StoreWord

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7f58) + 0x18) = 0x7f70] = R[30](0x7f78)

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7f58 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0xafc40020
I Type		| opcode 0x2b / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f78 = register[rs=0x1e]  / rt = 0x4 / immediate = 0x20
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x8fc30020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 63
WriteBack State	| instruction is StoreWord

Memory State	| instruction is AddUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7f78 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fc30020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f78 = register[rs=0x1e]  / rt = 0x3 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x24020001
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 64
WriteBack State	| instruction is AddUnsigned
R[rd=0x1e] = 0x7f58

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[30](0x7f58) + 0x20) = 0x7f78] = R[4](0x2)

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f78 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x24020001
I Type		| opcode 0x9 / signExtImm 0x1 / zeroExtImm 0x1 / branchAddr 0x4
I Type		| rsData = 0x0 = register[rs=0x0]  / rt = 0x2 / immediate = 0x1
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x14620004
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 65
WriteBack State	| instruction is StoreWord

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x1 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x14620004
I Type		| opcode 0x5 / signExtImm 0x4 / zeroExtImm 0x4 / branchAddr 0x10
I Type		| rsData = 0x3 = register[rs=0x3]  / rt = 0x2 / immediate = 0x10
Instruction	| BranchOnNotEqual

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 66
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[3] = M[R[30](0x7f58) + 0x20] = 0x7f78

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is BranchOnNotEqual
if(R[rs] != R[rt])	PC = PC + 4 + BranchAddr
if(R[3](0x2) != R[2](0x1))	PC = {0x5c + 4 + 0x10}(0x70)

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 67
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x2] = 0x1 / ExecutionResult 

Memory State	| instruction is BranchOnNotEqual

Fetch State	| instruction Value is 0x0x8fc20020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 68
WriteBack State	| instruction is BranchOnNotEqual

Decode State	| instruction Value is 0x0x8fc20020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f58 = register[rs=0x1e]  / rt = 0x2 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x2442ffff
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 69
Execution State	| instruction is LoadWord
ExecutionResult = 0x7f78 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x2442ffff
I Type		| opcode 0x9 / signExtImm 0xffffffff / zeroExtImm 0xffff / branchAddr 0xfffffffc
I Type		| rsData = 0x1 = register[rs=0x2]  / rt = 0x2 / immediate = 0xffffffff
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x402021
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 70
Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x1 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x402021
R Type		| rd 0x4 / rs 0x2 / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x1 = register[rs=0x2]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0xc000010
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 71
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[2] = M[R[30](0x7f58) + 0x20] = 0x7f78

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x1 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0xc000010
J Type		| opcode 0x3 / address 0x40
J Type		| address = 0x40
Instruction	| JumpAndLink

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 72
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x2] = 0x1 / ExecutionResult 

Memory State	| instruction is AddUnsigned

Execution State	| instruction is JumpAndLink
R[31] = PC + 8; PC = JumpAddr
R[31] = 0x84; PC = 0x40

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 73
WriteBack State	| instruction is AddUnsigned
R[rd=0x4] = 0x1

Memory State	| instruction is JumpAndLink

Fetch State	| instruction Value is 0x0x27bdffe0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 74
WriteBack State	| instruction is JumpAndLink

Decode State	| instruction Value is 0x0x27bdffe0
I Type		| opcode 0x9 / signExtImm 0xffffffe0 / zeroExtImm 0xffe0 / branchAddr 0xffffff80
I Type		| rsData = 0x7f58 = register[rs=0x1d]  / rt = 0x1d / immediate = 0xffffffe0
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0xafbf001c
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 75
Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7f38 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0xafbf001c
I Type		| opcode 0x2b / signExtImm 0x1c / zeroExtImm 0x1c / branchAddr 0x70
I Type		| rsData = 0x7f58 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x1c
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0xafbe0018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 76
Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7f54 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0xafbe0018
I Type		| opcode 0x2b / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7f58 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x18
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x3a0f021
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 77
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7f38 / ExecutionResult 

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7f38) + 0x1c) = 0x7f54] = R[31](0x84)

Execution State	| instruction is StoreWord
ExecutionResult = 0x7f50 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x3a0f021
R Type		| rd 0x1e / rs 0x1d / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7f38 = register[rs=0x1d]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0xafc40020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 78
WriteBack State	| instruction is StoreWord

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[29](0x7f38) + 0x18) = 0x7f50] = R[30](0x7f58)

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7f38 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0xafc40020
I Type		| opcode 0x2b / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f58 = register[rs=0x1e]  / rt = 0x4 / immediate = 0x20
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x8fc30020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 79
WriteBack State	| instruction is StoreWord

Memory State	| instruction is AddUnsigned

Execution State	| instruction is StoreWord
ExecutionResult = 0x7f58 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fc30020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f58 = register[rs=0x1e]  / rt = 0x3 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x24020001
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 80
WriteBack State	| instruction is AddUnsigned
R[rd=0x1e] = 0x7f38

Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[30](0x7f38) + 0x20) = 0x7f58] = R[4](0x1)

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f58 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x24020001
I Type		| opcode 0x9 / signExtImm 0x1 / zeroExtImm 0x1 / branchAddr 0x4
I Type		| rsData = 0x0 = register[rs=0x0]  / rt = 0x2 / immediate = 0x1
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x14620004
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 81
WriteBack State	| instruction is StoreWord

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x1 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x14620004
I Type		| opcode 0x5 / signExtImm 0x4 / zeroExtImm 0x4 / branchAddr 0x10
I Type		| rsData = 0x2 = register[rs=0x3]  / rt = 0x2 / immediate = 0x10
Instruction	| BranchOnNotEqual

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 82
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[3] = M[R[30](0x7f38) + 0x20] = 0x7f58

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is BranchOnNotEqual
if(R[rs] != R[rt])	PC = PC + 4 + BranchAddr
if(R[3](0x1) != R[2](0x1))	PC = {0x5c + 4 + 0x10}(0x70)

Decode State	| instruction Value is 0x0x0
Fetch State	| instruction Value is 0x0x24020001
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 83
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x2] = 0x1 / ExecutionResult 

Memory State	| instruction is BranchOnNotEqual

Decode State	| instruction Value is 0x0x24020001
I Type		| opcode 0x9 / signExtImm 0x1 / zeroExtImm 0x1 / branchAddr 0x4
I Type		| rsData = 0x0 = register[rs=0x0]  / rt = 0x2 / immediate = 0x1
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x8000024
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 84
WriteBack State	| instruction is BranchOnNotEqual

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x1 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x8000024
J Type		| opcode 0x2 / address 0x90
J Type		| address = 0x90
Instruction	| Jump

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 85
Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is Jump
PC = JumpAddr
PC = 0x90

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 86
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x2] = 0x1 / ExecutionResult 

Memory State	| instruction is Jump

Fetch State	| instruction Value is 0x0x3c0e821
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 87
WriteBack State	| instruction is Jump

Decode State	| instruction Value is 0x0x3c0e821
R Type		| rd 0x1d / rs 0x1e / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7f38 = register[rs=0x1e]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0x8fbf001c
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 88
Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7f38 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0x8fbf001c
I Type		| opcode 0x23 / signExtImm 0x1c / zeroExtImm 0x1c / branchAddr 0x70
I Type		| rsData = 0x7f38 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x1c
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x8fbe0018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 89
Memory State	| instruction is AddUnsigned

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f54 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fbe0018
I Type		| opcode 0x23 / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7f38 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x18
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x27bd0020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 90
WriteBack State	| instruction is AddUnsigned
R[rd=0x1d] = 0x7f38

Memory State	| instruction is LoadWord

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f50 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x27bd0020
I Type		| opcode 0x9 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f38 = register[rs=0x1d]  / rt = 0x1d / immediate = 0x20
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x3e00008
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 91
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[31] = M[R[29](0x7f38) + 0x1c] = 0x7f54

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7f58 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x3e00008
R Type		| rd 0x0 / rs 0x1f / rt 0x0 / shamt 0x0 / funct 0x8
R Type		| rsData = 0x84 = register[rs=0x1f]  / rtData = 0x0 = register[rt=0x0]
Instruction	| JumpRegister

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 92
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[30] = M[R[29](0x7f38) + 0x18] = 0x7f50

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is JumpRegister
PC = R[rs]
PC = R[31](0x84)

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 93
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7f58 / ExecutionResult 

Memory State	| instruction is JumpRegister

Fetch State	| instruction Value is 0x0x401821
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 94
WriteBack State	| instruction is JumpRegister

Decode State	| instruction Value is 0x0x401821
R Type		| rd 0x3 / rs 0x2 / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x1 = register[rs=0x2]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0x8fc20020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 95
Execution State	| instruction is AddUnsigned
ExecutionResult = 0x1 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0x8fc20020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f58 = register[rs=0x1e]  / rt = 0x2 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x70621002
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 96
Memory State	| instruction is AddUnsigned

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f78 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x70621002
I Type		| opcode 0x1c / signExtImm 0x1002 / zeroExtImm 0x1002 / branchAddr 0x4008
 / funct 0x%x
R Type		| rsData = 0x1 = register[rs=0x3]  / rtData = 0x1 = register[rt=0x2]
Instruction	| Multiply32BitRes

Fetch State	| instruction Value is 0x0x3c0e821
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 97
WriteBack State	| instruction is AddUnsigned
R[rd=0x3] = 0x1

Memory State	| instruction is LoadWord

Execution State	| instruction is Multiply32BitRes
ExecutionResult = 0x3 / ExecutionResult = R[rs] * R[rt]

Decode State	| instruction Value is 0x0x3c0e821
R Type		| rd 0x1d / rs 0x1e / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7f58 = register[rs=0x1e]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0x8fbf001c
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 98
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[2] = M[R[30](0x7f58) + 0x20] = 0x7f78

Memory State	| instruction is Multiply32BitRes

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7f58 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0x8fbf001c
I Type		| opcode 0x23 / signExtImm 0x1c / zeroExtImm 0x1c / branchAddr 0x70
I Type		| rsData = 0x7f58 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x1c
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x8fbe0018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 99
WriteBack State	| instruction is Multiply32BitRes
R[rd=0x2] = 0x2

Memory State	| instruction is AddUnsigned

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f74 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fbe0018
I Type		| opcode 0x23 / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7f58 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x18
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x27bd0020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 100
WriteBack State	| instruction is AddUnsigned
R[rd=0x1d] = 0x7f58

Memory State	| instruction is LoadWord

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f70 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x27bd0020
I Type		| opcode 0x9 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f58 = register[rs=0x1d]  / rt = 0x1d / immediate = 0x20
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x3e00008
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 101
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[31] = M[R[29](0x7f58) + 0x1c] = 0x7f74

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7f78 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x3e00008
R Type		| rd 0x0 / rs 0x1f / rt 0x0 / shamt 0x0 / funct 0x8
R Type		| rsData = 0x84 = register[rs=0x1f]  / rtData = 0x0 = register[rt=0x0]
Instruction	| JumpRegister

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 102
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[30] = M[R[29](0x7f58) + 0x18] = 0x7f70

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is JumpRegister
PC = R[rs]
PC = R[31](0x84)

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 103
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7f78 / ExecutionResult 

Memory State	| instruction is JumpRegister

Fetch State	| instruction Value is 0x0x401821
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 104
WriteBack State	| instruction is JumpRegister

Decode State	| instruction Value is 0x0x401821
R Type		| rd 0x3 / rs 0x2 / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x2 = register[rs=0x2]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0x8fc20020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 105
Execution State	| instruction is AddUnsigned
ExecutionResult = 0x2 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0x8fc20020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f78 = register[rs=0x1e]  / rt = 0x2 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x70621002
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 106
Memory State	| instruction is AddUnsigned

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f98 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x70621002
I Type		| opcode 0x1c / signExtImm 0x1002 / zeroExtImm 0x1002 / branchAddr 0x4008
 / funct 0x%x
R Type		| rsData = 0x1 = register[rs=0x3]  / rtData = 0x2 = register[rt=0x2]
Instruction	| Multiply32BitRes

Fetch State	| instruction Value is 0x0x3c0e821
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 107
WriteBack State	| instruction is AddUnsigned
R[rd=0x3] = 0x2

Memory State	| instruction is LoadWord

Execution State	| instruction is Multiply32BitRes
ExecutionResult = 0x5 / ExecutionResult = R[rs] * R[rt]

Decode State	| instruction Value is 0x0x3c0e821
R Type		| rd 0x1d / rs 0x1e / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7f78 = register[rs=0x1e]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0x8fbf001c
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 108
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[2] = M[R[30](0x7f78) + 0x20] = 0x7f98

Memory State	| instruction is Multiply32BitRes

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7f78 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0x8fbf001c
I Type		| opcode 0x23 / signExtImm 0x1c / zeroExtImm 0x1c / branchAddr 0x70
I Type		| rsData = 0x7f78 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x1c
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x8fbe0018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 109
WriteBack State	| instruction is Multiply32BitRes
R[rd=0x2] = 0x6

Memory State	| instruction is AddUnsigned

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f94 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fbe0018
I Type		| opcode 0x23 / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7f78 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x18
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x27bd0020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 110
WriteBack State	| instruction is AddUnsigned
R[rd=0x1d] = 0x7f78

Memory State	| instruction is LoadWord

Execution State	| instruction is LoadWord
ExecutionResult = 0x7f90 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x27bd0020
I Type		| opcode 0x9 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f78 = register[rs=0x1d]  / rt = 0x1d / immediate = 0x20
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x3e00008
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 111
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[31] = M[R[29](0x7f78) + 0x1c] = 0x7f94

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7f98 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x3e00008
R Type		| rd 0x0 / rs 0x1f / rt 0x0 / shamt 0x0 / funct 0x8
R Type		| rsData = 0x84 = register[rs=0x1f]  / rtData = 0x0 = register[rt=0x0]
Instruction	| JumpRegister

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 112
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[30] = M[R[29](0x7f78) + 0x18] = 0x7f90

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is JumpRegister
PC = R[rs]
PC = R[31](0x84)

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 113
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7f98 / ExecutionResult 

Memory State	| instruction is JumpRegister

Fetch State	| instruction Value is 0x0x401821
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 114
WriteBack State	| instruction is JumpRegister

Decode State	| instruction Value is 0x0x401821
R Type		| rd 0x3 / rs 0x2 / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x6 = register[rs=0x2]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0x8fc20020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 115
Execution State	| instruction is AddUnsigned
ExecutionResult = 0x6 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0x8fc20020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f98 = register[rs=0x1e]  / rt = 0x2 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x70621002
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 116
Memory State	| instruction is AddUnsigned

Execution State	| instruction is LoadWord
ExecutionResult = 0x7fb8 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x70621002
I Type		| opcode 0x1c / signExtImm 0x1002 / zeroExtImm 0x1002 / branchAddr 0x4008
 / funct 0x%x
R Type		| rsData = 0x2 = register[rs=0x3]  / rtData = 0x6 = register[rt=0x2]
Instruction	| Multiply32BitRes

Fetch State	| instruction Value is 0x0x3c0e821
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 117
WriteBack State	| instruction is AddUnsigned
R[rd=0x3] = 0x6

Memory State	| instruction is LoadWord

Execution State	| instruction is Multiply32BitRes
ExecutionResult = 0xa / ExecutionResult = R[rs] * R[rt]

Decode State	| instruction Value is 0x0x3c0e821
R Type		| rd 0x1d / rs 0x1e / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7f98 = register[rs=0x1e]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0x8fbf001c
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 118
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[2] = M[R[30](0x7f98) + 0x20] = 0x7fb8

Memory State	| instruction is Multiply32BitRes

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7f98 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0x8fbf001c
I Type		| opcode 0x23 / signExtImm 0x1c / zeroExtImm 0x1c / branchAddr 0x70
I Type		| rsData = 0x7f98 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x1c
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x8fbe0018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 119
WriteBack State	| instruction is Multiply32BitRes
R[rd=0x2] = 0x18

Memory State	| instruction is AddUnsigned

Execution State	| instruction is LoadWord
ExecutionResult = 0x7fb4 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fbe0018
I Type		| opcode 0x23 / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7f98 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x18
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x27bd0020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 120
WriteBack State	| instruction is AddUnsigned
R[rd=0x1d] = 0x7f98

Memory State	| instruction is LoadWord

Execution State	| instruction is LoadWord
ExecutionResult = 0x7fb0 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x27bd0020
I Type		| opcode 0x9 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7f98 = register[rs=0x1d]  / rt = 0x1d / immediate = 0x20
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x3e00008
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 121
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[31] = M[R[29](0x7f98) + 0x1c] = 0x7fb4

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7fb8 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x3e00008
R Type		| rd 0x0 / rs 0x1f / rt 0x0 / shamt 0x0 / funct 0x8
R Type		| rsData = 0x84 = register[rs=0x1f]  / rtData = 0x0 = register[rt=0x0]
Instruction	| JumpRegister

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 122
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[30] = M[R[29](0x7f98) + 0x18] = 0x7fb0

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is JumpRegister
PC = R[rs]
PC = R[31](0x84)

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 123
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7fb8 / ExecutionResult 

Memory State	| instruction is JumpRegister

Fetch State	| instruction Value is 0x0x401821
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 124
WriteBack State	| instruction is JumpRegister

Decode State	| instruction Value is 0x0x401821
R Type		| rd 0x3 / rs 0x2 / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x18 = register[rs=0x2]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0x8fc20020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 125
Execution State	| instruction is AddUnsigned
ExecutionResult = 0x18 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0x8fc20020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7fb8 = register[rs=0x1e]  / rt = 0x2 / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x70621002
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 126
Memory State	| instruction is AddUnsigned

Execution State	| instruction is LoadWord
ExecutionResult = 0x7fd8 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x70621002
I Type		| opcode 0x1c / signExtImm 0x1002 / zeroExtImm 0x1002 / branchAddr 0x4008
 / funct 0x%x
R Type		| rsData = 0x6 = register[rs=0x3]  / rtData = 0x18 = register[rt=0x2]
Instruction	| Multiply32BitRes

Fetch State	| instruction Value is 0x0x3c0e821
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 127
WriteBack State	| instruction is AddUnsigned
R[rd=0x3] = 0x18

Memory State	| instruction is LoadWord

Execution State	| instruction is Multiply32BitRes
ExecutionResult = 0x1d / ExecutionResult = R[rs] * R[rt]

Decode State	| instruction Value is 0x0x3c0e821
R Type		| rd 0x1d / rs 0x1e / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7fb8 = register[rs=0x1e]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0x8fbf001c
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 128
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[2] = M[R[30](0x7fb8) + 0x20] = 0x7fd8

Memory State	| instruction is Multiply32BitRes

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7fb8 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0x8fbf001c
I Type		| opcode 0x23 / signExtImm 0x1c / zeroExtImm 0x1c / branchAddr 0x70
I Type		| rsData = 0x7fb8 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x1c
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x8fbe0018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 129
WriteBack State	| instruction is Multiply32BitRes
R[rd=0x2] = 0x78

Memory State	| instruction is AddUnsigned

Execution State	| instruction is LoadWord
ExecutionResult = 0x7fd4 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fbe0018
I Type		| opcode 0x23 / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7fb8 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x18
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x27bd0020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 130
WriteBack State	| instruction is AddUnsigned
R[rd=0x1d] = 0x7fb8

Memory State	| instruction is LoadWord

Execution State	| instruction is LoadWord
ExecutionResult = 0x7fd0 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x27bd0020
I Type		| opcode 0x9 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7fb8 = register[rs=0x1d]  / rt = 0x1d / immediate = 0x20
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x3e00008
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 131
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[31] = M[R[29](0x7fb8) + 0x1c] = 0x7fd4

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x7fd8 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x3e00008
R Type		| rd 0x0 / rs 0x1f / rt 0x0 / shamt 0x0 / funct 0x8
R Type		| rsData = 0x20 = register[rs=0x1f]  / rtData = 0x0 = register[rt=0x0]
Instruction	| JumpRegister

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 132
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[30] = M[R[29](0x7fb8) + 0x18] = 0x7fd0

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is JumpRegister
PC = R[rs]
PC = R[31](0x20)

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 133
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x7fd8 / ExecutionResult 

Memory State	| instruction is JumpRegister

Fetch State	| instruction Value is 0x0xafc20018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 134
WriteBack State	| instruction is JumpRegister

Decode State	| instruction Value is 0x0xafc20018
I Type		| opcode 0x2b / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7fd8 = register[rs=0x1e]  / rt = 0x2 / immediate = 0x18
Instruction	| StoreWord

Fetch State	| instruction Value is 0x0x8fc20018
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 135
Execution State	| instruction is StoreWord
ExecutionResult = 0x7ff0 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fc20018
I Type		| opcode 0x23 / signExtImm 0x18 / zeroExtImm 0x18 / branchAddr 0x60
I Type		| rsData = 0x7fd8 = register[rs=0x1e]  / rt = 0x2 / immediate = 0x18
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x3c0e821
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 136
Memory State	| instruction is StoreWord
M[R[rs] + SignExtImm] = R[rt]
M[(R[30](0x7fd8) + 0x18) = 0x7ff0] = R[2](0x78)

Execution State	| instruction is LoadWord
ExecutionResult = 0x7ff0 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x3c0e821
R Type		| rd 0x1d / rs 0x1e / rt 0x0 / shamt 0x0 / funct 0x21
R Type		| rsData = 0x7fd8 = register[rs=0x1e]  / rtData = 0x0 = register[rt=0x0]
Instruction	| AddUnsigned

Fetch State	| instruction Value is 0x0x8fbf0024
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 137
WriteBack State	| instruction is StoreWord

Memory State	| instruction is LoadWord

Execution State	| instruction is AddUnsigned
ExecutionResult = 0x7fd8 / ExecutionResult = R[rs] + R[rt]

Decode State	| instruction Value is 0x0x8fbf0024
I Type		| opcode 0x23 / signExtImm 0x24 / zeroExtImm 0x24 / branchAddr 0x90
I Type		| rsData = 0x7fd8 = register[rs=0x1d]  / rt = 0x1f / immediate = 0x24
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x8fbe0020
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 138
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[2] = M[R[30](0x7fd8) + 0x18] = 0x7ff0

Memory State	| instruction is AddUnsigned

Execution State	| instruction is LoadWord
ExecutionResult = 0x7ffc / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x8fbe0020
I Type		| opcode 0x23 / signExtImm 0x20 / zeroExtImm 0x20 / branchAddr 0x80
I Type		| rsData = 0x7fd8 = register[rs=0x1d]  / rt = 0x1e / immediate = 0x20
Instruction	| LoadWord

Fetch State	| instruction Value is 0x0x27bd0028
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 139
WriteBack State	| instruction is AddUnsigned
R[rd=0x1d] = 0x7fd8

Memory State	| instruction is LoadWord

Execution State	| instruction is LoadWord
ExecutionResult = 0x7ff8 / ExecutionResult = R[rs] + SignExtImm

Decode State	| instruction Value is 0x0x27bd0028
I Type		| opcode 0x9 / signExtImm 0x28 / zeroExtImm 0x28 / branchAddr 0xa0
I Type		| rsData = 0x7fd8 = register[rs=0x1d]  / rt = 0x1d / immediate = 0x28
Instruction	| AddImmediateUnsigned

Fetch State	| instruction Value is 0x0x3e00008
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 140
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[31] = M[R[29](0x7fd8) + 0x24] = 0x7ffc

Memory State	| instruction is LoadWord

Execution State	| instruction is AddImmediateUnsigned
ExecutionResult = 0x8000 / ExecutionResult = R[rs] + SignExtImmediate

Decode State	| instruction Value is 0x0x3e00008
R Type		| rd 0x0 / rs 0x1f / rt 0x0 / shamt 0x0 / funct 0x8
R Type		| rsData = 0xffffffff = register[rs=0x1f]  / rtData = 0x0 = register[rt=0x0]
Instruction	| JumpRegister

Fetch State	| instruction Value is 0x0x0
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 141
WriteBack State	| instruction is LoadWord
R[rt] = M[R[rs] + SignExtImmm]
R[30] = M[R[29](0x7fd8) + 0x20] = 0x7ff8

Memory State	| instruction is AddImmediateUnsigned

Execution State	| instruction is JumpRegister
PC = R[rs]
PC = R[31](0xffffffff)

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 142
WriteBack State	| instruction is AddImmediateUnsigned
R[rt=0x1d] = 0x8000 / ExecutionResult 

Memory State	| instruction is JumpRegister

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 143
WriteBack State	| instruction is JumpRegister

-----------------------------------------------
-----------------------------------------------
Cycle Num	| 144
-----------------------------------------------
-----------------------------------------------
Cycle Num	| 145
-----------------------------------------------
Final Return Value is 0x78(v0)
--------- System End ---------
